#!/bin/bash

# locals
ENV="staging"
NAME="ponyfoo-$ENV"
KEYFILE="deploy/keys/$ENV"
EMOJI="$(emoji-random)"

# instance-specific
INSTANCE_USER=$(cat $KEYFILE.user)
INSTANCE_ID=$(cat $KEYFILE.id)
PUBLIC_DNS=$(cat $KEYFILE.dns)

APP="~/apps/$ENV"
APP_VERSIONS="$APP/v"
APP_LIVE="$APP/live"
APP_CONFIG="$APP/config"
APP_SCRIPT="$APP_LIVE/app.js"
RSYNC="~/apps/.rsync/$ENV"
RSYNC_REPO="$RSYNC/app/"

# bump package.json
git add .
git commit -am "Pre-deploy commit because $EMOJI"
VERSION=$(npm version patch -m "Upgrade to %s because deploy $EMOJI")
echo "v'$VERSION'"
APP_LATEST="$APP_VERSIONS/$VERSION"

# build for release
npm run release

# upload modifications
rsync \
  -az \
  --stats \
  --delete \
  --exclude-from .rsyncignore \
  -e "ssh -i $KEYFILE -o StrictHostKeyChecking=no" \
  . \
  $INSTANCE_USER@$PUBLIC_DNS:$RSYNC_REPO

# jump into instance
ssh -Ti $KEYFILE -o StrictHostKeyChecking=no $INSTANCE_USER@$PUBLIC_DNS << EOF_DEPLOY
  pm2_start_or_reload () {
    if [ "$(pm2 jlist)" == "[]" ] ; then
      pm2 start -i 2 --name $NAME $APP_SCRIPT
    else
      pm2 reload $NAME
    fi
  }

  rm -rf $APP_LATEST
  cp -r $RSYNC_REPO $APP_LATEST
  ln -sfn $APP_LATEST $APP_LIVE
  ln -sfn $APP_CONFIG $APP_LATEST/.env
  rm -rf `ls -t $APP_VERSIONS | tail -n +11`
  npm --prefix $APP_LATEST install --production
  sudo nginx -s reload || sudo service nginx start || (sudo cat /var/log/nginx/error.log && exit 1)
  pm2_start_or_reload
EOF_DEPLOY

echo "Deployed v$VERSION to $ENV"
