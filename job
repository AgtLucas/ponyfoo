#!/usr/bin/env node

'use strict';

var contra = require('contra');
var winston = require('winston');
var models = require('./models');
var pkg = require('./package.json');
var logging = require('./lib/logging');
var db = require('./lib/db');
var articleService = require('./services/article');
var articlePublishService = require('./services/articlePublish');
var m;

logging.configure();
db(operational);

function operational () {
  winston.info('Worker %s executing job@%s', process.pid, pkg.version);
  m = models();
  m.Article.find({ status: 'publish' }, found);
}

function found (err, articles) {
  if (err || !articles || articles.length === 0) {
    done(err); return;
  }
  winston.info('Found %s articles queued for publication', articles.length);
  contra.each(articles, 2, single, done);
}

function single (article, next) {
  contra.waterfall([
    function attemptPublication (next) {
      articlePublishService.publish(article, next)
    },
    function notifySubscribers (published, next) {
      if (published) {
        article.save(saved); // save the status change first!
      } else {
        next();
      }

      function saved (err) {
        articleService.campaign(article);
        next(err);
      }
    }
  ], next);
}

function done (err) {
  if (err) {
    winston.error('Cron job failed!', err.stack || err);
  }
  process.exit(err ? 1 : 0);
}
